# Laboratory Work #1 â€” Database Design (International Airport)

**Author:** David Sebelev  
**Course:** Databases  

---

## ðŸ“Œ Task
Design a database schema for an International Airport system.  
Identify entities, attributes, and relationships. Normalize to 3NF.  
Build an ER diagram.

---

## ðŸ“Œ Entities
1. Airport  
2. Airline  
3. Flight  
4. Passenger  
5. Booking  
6. BookingChange  
7. BoardingPass  
8. Baggage  
9. BaggageCheck  
10. SecurityCheck  

---

## ðŸ“Œ Attributes

### Airport
- PK `airport_id`  
- `airport_name`, `country`, `state`, `city`  
- `created_at`, `updated_at`

### Airline
- PK `airline_id`  
- `airline_code` (Unique), `name`, `country`  
- `created_at`, `updated_at`

### Flight
- PK `flight_id`  
- FK `airline_id`  
- FK `departure_airport_id`, FK `arrival_airport_id`  
- `scheduled_departure_at`, `scheduled_arrival_at`  
- `actual_departure_at`, `actual_arrival_at`  
- `departing_gate`, `arriving_gate`  
- `created_at`, `updated_at`

### Passenger
- PK `passenger_id`  
- `first_name`, `last_name`, `gender`, `date_of_birth`  
- `citizenship_country`, `residence_country`  
- `passport_number` (Unique)  
- `created_at`, `updated_at`

### Booking
- PK `booking_id`  
- FK `flight_id`, FK `passenger_id`  
- `status`, `booking_platform`, `ticket_price`  
- `created_at`, `updated_at`

### BookingChange
- PK `change_id`  
- FK `booking_id`  
- `changed_at`, `field_name`, `old_value`, `new_value`, `changed_by`

### BoardingPass
- PK `boarding_pass_id`  
- FK `booking_id` (Unique)  
- `seat`, `boarding_time`  
- `created_at`, `updated_at`

### Baggage
- PK `baggage_id`  
- FK `booking_id`  
- `weight_kg`  
- `created_at`, `updated_at`

### BaggageCheck
- PK `baggage_check_id`  
- FK `baggage_id`, FK `booking_id`, FK `passenger_id`  
- `check_result`  
- `created_at`, `updated_at`

### SecurityCheck
- PK `security_check_id`  
- FK `passenger_id`, FK `booking_id`  
- `check_result`  
- `created_at`, `updated_at`

---

## ðŸ“Œ Relationships
1. Airline (1) â€” (M) Flight  
2. Airport (1) â€” (M) Flight (departure, arrival)  
3. Flight (1) â€” (M) Booking  
4. Passenger (1) â€” (M) Booking  
5. Booking (1) â€” (1) BoardingPass  
6. Booking (1) â€” (M) Baggage  
7. Baggage (1) â€” (1) BaggageCheck  
8. Booking (1) â€” (M) BookingChange  
9. Passenger (1) â€” (M) SecurityCheck  
10. Booking (1) â€” (M) SecurityCheck  

---

## ðŸ“Œ Normalization
- **1NF**: all attributes atomic, no repeating groups.  
- **2NF**: non-key attributes depend on the whole PK.  
- **3NF**: no transitive dependencies (separate tables for changes, checks, baggage).  
---
## ðŸ“Œ Legend
0..1 means zero or one relation is unnecessary
1-> only one realation to the entity
*-> many raleations to the entity
PK - primary key
FK - foreign key
U - unique key
---

## ðŸ“Œ Conclusion
Database schema satisfies 3NF and models the core processes of an international airport: flights, bookings, passengers, baggage handling, and security checks.
